int main(){
  int t ; cin >> t;
  //t is test cases 
  while(t--){
    int n, int e; 
    //n is the node , e is the number of edges
    vector<int> g[n];
    bool vis[n];
    memset(vis , false , sizeof(vis));
    //set the visited array initially to false -> 0
    for(int i =0;i<e;i++)
    {
        int u , v; cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
        
    }
    dfs(0 , g, vis);
    cout << endl;
  }
  
}
void dfs(int s , vector<int> g[] , bool *vis){
  vis[s]=true;
  cout << s<< " ";
  for(int i = 0;i<g[s].size() ; i++){
      if(vis[g[s][i]]==false){
        dfs(g[s][i] , g , vis);
      }
  }
}
